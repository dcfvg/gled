#!/bin/bash

# glisser-editer
# USAGE: glisser-editer



function ge-update $content {

  docw=2480                     # docsize
  doch=3508                     # A4 - 300dpi = 2480x3508

  archive="$content/archives"   # keeping all submission ordered by date
  inbox="$content/inbox"        # where the new files are uploaded
  printers="$content/printers"  # printer files list
  steps="$content/steps"        # every steps of the image in jpegs
  trash="$content/trash"        # an incremental clone of the inbox
  last="$steps/last.jpg"        # the current wall state

  for doc in `find $inbox \( -iname \*.png -o  -iname \*.pdf -o -iname \*.jpg \) -type f | xargs ls -rt`
  do
  
    box=$(basename $(dirname $pdoc))  # contribution path
    ybox=${box:0:1}                   # sheet line number                   
    xbox=${box:2:1}                   # sheet column
  
    docname=$(basename $doc)             # contribution file
  
    echo "$ybox:$xbox ($docname)"
  
    # get contribution timestamp
    filetime=$(perl -MPOSIX -le 'print strftime "%s",localtime ((stat $ARGV[0])[9])' $pdoc)
  
    # resize and archive documents
  
    archiveName="$filetime.$ybox-$xbox.$doc" #name of the archive file
  
    convert -format jpg -resize $docsize -extent $docw"x"$doch $pdoc \
    -gravity south \
    -stroke '#000C' -strokewidth 2 -annotate 0 "$ybox:$xbox ($doc)" \
    -stroke  none   -fill white    -annotate 0 "$ybox:$xbox ($doc)" \
    $archive"/"$archiveName
  
    # add current contribution to last step
    step="$steps/$filetime.jpg"
    composite $archive"/"$archiveName -geometry "+$((docw*xbox))+$((doch*ybox))" $last $step
  
    # move form inbox to trash
    mv $doc "$trash/$box/$docName"
  
    # update last step
    rm $last
    cp $step $last
  
    # generate printable version (pdf)
    pdf="$printers/all/$filetime.pdf"
    convert -format pdf $step $pdf
  
    # copy printable version for every printers
    for printer in `find $printers -type d`
    do
      cp $pdf "$printer/$filetime.pdf"  
    done
  
  done
}

for poster in `find $(pwd) -type d`
do
  ge-update $poster
done